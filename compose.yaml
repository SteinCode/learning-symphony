services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
      target: frankenphp_dev
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80

      # Symfony / Doctrine â†’ point at the MySQL service
      DATABASE_URL: "${DATABASE_URL}"

      # Mercure (unchanged)
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}:${HTTPS_PORT:-443}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}

      # Flex flags (remove later)
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}

    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./:/app

    ports:
      - target: 80
        published: ${HTTP_PORT:-80}
      - target: 443
        published: ${HTTPS_PORT:-443}
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  database:
    image: mysql:${MYSQL_VERSION:-8.0}
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-!ChangeMe!}
      MYSQL_DATABASE:      ${MYSQL_DATABASE:-app}
      MYSQL_USER:          ${MYSQL_USER:-app}
      MYSQL_PASSWORD:      ${MYSQL_PASSWORD:-!ChangeMe!}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - database_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST:     database
      PMA_USER:     root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD:-!ChangeMe!}
    ports:
      - '8080:80'
    depends_on:
      database:
        condition: service_healthy

volumes:
  caddy_data:
  caddy_config:
  database_data:
